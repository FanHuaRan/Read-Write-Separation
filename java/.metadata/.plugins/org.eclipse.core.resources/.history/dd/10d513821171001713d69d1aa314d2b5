package com.fhr.osmonitor.components;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;

import org.apache.log4j.Logger;

public class OsMonitor {
	/**
	 * 监视器监视周期 s为单位
	 */
	private static final long PERIOD = 5;
	/**
	 * 日志组件
	 */
	private final Logger logger = Logger.getLogger(OSMonitor.class);
	/**
	 * 定时周期任务线程池
	 */
	private final ScheduledExecutorService executorService = Executors.newScheduledThreadPool(5);
	/**
	 * 开始监视
	 */
	public void start() {
		//定周期任务  间隔PERIOD秒执行
		executorService.scheduleAtFixedRate(() -> {
			//获取操作系统信息对象
			OSystemInfo oSystemInfo = osTool.getOSystemInfo();
			//记录日志
			logger.info(oSystemInfo.toString());
			//严重检查
			if (oSystemInfo.getMemoryRatio() > MEMORYSERIOUS || oSystemInfo.getCpuRatio() > CPUORYSERIOUS) {
				SeriousHandler(oSystemInfo);
				return;
			}
			//警告检测
			if (oSystemInfo.getMemoryRatio() > MEMORYWARINGRATE || oSystemInfo.getCpuRatio() > CPUWARINGRATE) {
				WarinHander(oSystemInfo);
			}
		}, 0, PERIOD, TimeUnit.SECONDS);
	}
	/**
	 * 停止监视器
	 */
	public void stop() {
		if (!executorService.isShutdown()) {
			executorService.shutdown();
		}
	}
	/**
	 * 警告处理方法
	 * @param oSystemInfo
	 */
	public void WarinHander(OSystemInfo oSystemInfo) {
		// nothing
	}
	/**
	 * 严重处理方法
	 * @param oSystemInfo
	 */
	public void SeriousHandler(OSystemInfo oSystemInfo) {
		// nothing
	}
}
